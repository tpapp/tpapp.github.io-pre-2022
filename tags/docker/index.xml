<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>docker on Tamás K. Papp&#39;s website</title>
  <link href="https://tpapp.github.io/index.xml" rel="self"/>
  <link href="https://tpapp.github.io/tags/docker/"/>
  <updated>2018-01-19T08:47:06+01:00</updated>
  
  <id>https://tpapp.github.io/tags/docker/</id>
  <author>
    <name>Tamás K. Papp</name>
  </author>
  <generator>Hugo -- gohugo.io</generator>
  
  <entry>
    <title type="html">Continuous integration for Julia packages using Docker</title>
    <link href="https://tpapp.github.io/post/travis-docker-julia-ci/"/>
    <id>https://tpapp.github.io/post/travis-docker-julia-ci/</id>
    <published>2018-01-19T08:47:06+01:00</published>
    <updated>2018-01-19T08:47:06+01:00</updated>
    
    <content type="html" xml:base="https://tpapp.github.io/post/travis-docker-julia-ci/">&lt;p&gt;This post may be useful for maintainers of Julia packages which require a large binary dependencies on CI services like Travis.&lt;/p&gt;

&lt;p&gt;I have recently started using Kristoffer Carlsson&#39;s excellent &lt;a href=&#34;https://github.com/KristofferC/PGFPlotsX.jl&#34;&gt;PGFPlotsX&lt;/a&gt; for plotting. The package is a thin wrapper which emits LaTeX code for use with &lt;a href=&#34;http://pgfplots.sourceforge.net/&#34;&gt;pgfplots&lt;/a&gt;, which is extremely versatile and well-documented.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:Using-this-packa&#34;&gt;&lt;a class=&#34;footnote&#34; href=&#34;#fn:Using-this-packa&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; However, since most of the action happens in LaTeX, unit testing requires a lot of binary dependencies, including the &lt;a href=&#34;https://tug.org/texlive/&#34;&gt;TeXLive&lt;/a&gt; suite and some related packages. This is not a problem on one&#39;s own machine where these would need to be installed just once, but when I submitted PRs, tests on Travis timed out more often than not because it had to install all of these for every run using &lt;code&gt;apt-get&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The documentation of Travis suggested that &lt;a href=&#34;http://docker.com/&#34;&gt;docker&lt;/a&gt; may be a solution for such cases, and I have been looking an opportunity to experiment with it anyway. After reading their tutorial it was relatively quick to produce an image based on plain vanilla Ubuntu 17.10, which is available as a docker image to build on, and the required TeXLive and related packages, plus some utilities.&lt;/p&gt;

&lt;p&gt;During building the image, I download the binaries for the stable version Julia, while &lt;code&gt;nightly&lt;/code&gt; is downloaded on demand. This speeds up CI by 40–50 seconds for &lt;code&gt;stable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is how it is run:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;the directory of the Julia package is mounted in the container at &lt;code&gt;/mnt&lt;/code&gt;,&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;Pkg.clone()&lt;/code&gt; and testing proceed as usual,&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;coverage results are copied back to &lt;code&gt;/mnt&lt;/code&gt; when done.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The resulting image runs in 3–4 minutes consistently. In case someone finds it useful for Julia packages with similarly large binary dependencies, I made it available as &lt;a href=&#34;https://github.com/tpapp/texlive-julia-minimal-docker&#34;&gt;&lt;code&gt;texlive-julia-minimal-docker&lt;/code&gt;&lt;/a&gt; on Github.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:Minimal-turns-ou&#34;&gt;&lt;a class=&#34;footnote&#34; href=&#34;#fn:Minimal-turns-ou&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; Naturally, for projects with other large binary dependencies, one would install different Ubuntu packages or binaries.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:Using-this-packa&#34;&gt;Using this package accelerated my plotting workflow in Julia. A post on this will follow soon. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:Using-this-packa&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li id=&#34;fn:Minimal-turns-ou&#34;&gt;“Minimal” turns out to be a misnomer, since some dependencies end up requiring X11 and the image is &amp;gt;700GB. &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:Minimal-turns-ou&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  
</feed>
