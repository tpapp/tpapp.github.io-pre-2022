<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>StanonTamás K. Papp&#39;s website</title>
  <link href="https://tpapp.github.io/index.xml" rel="self"/>
  <link href="https://tpapp.github.io/tags/stan/"/>
  <updated>2017-05-23T16:39:26+02:00</updated>
  
  <id>https://tpapp.github.io/tags/stan/</id>
  <author>
    <name>Tamás K. Papp</name>
  </author>
  <generator>Hugo -- gohugo.io</generator>
  
  <entry>
    <title type="html">Two tricks for change of variables in MCMC</title>
    <link href="https://tpapp.github.io/post/jacobian-chain/"/>
    <id>https://tpapp.github.io/post/jacobian-chain/</id>
    <published>2017-05-23T16:39:26+02:00</published>
    <updated>2017-05-23T16:39:26+02:00</updated>
    
    <content type="html" xml:base="https://tpapp.github.io/post/jacobian-chain/">

&amp;lt;p&amp;gt;Change of variables are sometimes advantageous, and occasionally inevitable for MCMC if you want efficient sampling, or to model a distribution that was obtained by a transformation. A classic example is the &amp;lt;em&amp;gt;lognormal distribution&amp;lt;/em&amp;gt;: when&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;$$\log(y) \sim N(\mu, \sigma^2)$$&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;one has to adjust the log posterior by $-\log y$ since&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;$$\frac{\partial \log(y)}{\partial y} = \frac{1}{y}$$&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;and&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;$$\log(1/y) = -\log(y).$$&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;In &amp;lt;a href=&amp;#34;http://mc-stan.org/&amp;#34;&amp;gt;Stan&amp;lt;/a&amp;gt;, one would accomplish this as&amp;lt;/p&amp;gt;
&amp;lt;div class=&amp;#34;highlight&amp;#34;&amp;gt;&amp;lt;pre class=&amp;#34;chroma&amp;#34;&amp;gt;&amp;lt;code class=&amp;#34;language-stan&amp;#34; data-lang=&amp;#34;stan&amp;#34;&amp;gt;target &#43;= -log(y)&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;p&amp;gt;In general, when you transform using a multivariate function $f$, you would adjust by&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;$$\log\det J_f(y)$$&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;which is the log of the determinant of the Jacobian &amp;amp;mdash; some texts simply refer to this as &amp;amp;ldquo;the Jacobian&amp;amp;rdquo;.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;The above is well-known, but the following two tricks are worth mentioning.&amp;lt;/p&amp;gt;

&amp;lt;h2 id=&amp;#34;chaining-transformations&amp;#34;&amp;gt;Chaining transformations&amp;lt;/h2&amp;gt;

&amp;lt;p&amp;gt;Suppose that you are changing a variable by using a chain of two functions $f \circ g$. Then
\begin{multline}
\log\det J_{f \circ g}(y) = \log \bigl(\det J_f(g(y)) \cdot \det J_g(y)\bigr) \\
= \log\det J_f(g(y)) &#43; \log\det J_g(y)
\end{multline}
which means that you can simply add (the log determinant of) the Jacobians, of course evaluated at the appropriate points.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;This is very useful when $f \circ g$ is complicated and $J_{f\circ g}$ is tedious to derive, or if you want to use multiple $f$s or $g$s and economize on the algebra.
 From the above, it is also easy to see that this generalizes to arbitrarily long chains of functions $f_1 \circ f_2 \circ \dots$.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;This trick turned out to be very useful when I was fitting a model where a transformation was general to both equilibrium concepts I was using (a noncooperative game and a social planner), so I could save on code. Of course, since &amp;lt;a href=&amp;#34;https://github.com/stan-dev/stan/issues/2224&amp;#34;&amp;gt;#2224&amp;lt;/a&amp;gt; is WIP, I had to copy-paste the code, but still saved quite a bit of work.&amp;lt;/p&amp;gt;

&amp;lt;h2 id=&amp;#34;transforming-a-subset-of-variables&amp;#34;&amp;gt;Transforming a subset of variables&amp;lt;/h2&amp;gt;

&amp;lt;p&amp;gt;Suppose $x \in \mathbb{R}^m$ and $y \in \mathbb{R}^n$ are vectors, and you are interested in transforming to
$$
z = f(x,y)
$$
where $x$ and $z$ have the same dimension. It is useful to think about this transformation as
$$g(x,y) = [f(x,y), y]^\top$$
where $g : \mathbb{R}^{m&#43;n} \to \mathbb{R}^{m&#43;n}$. Since $y$ is mapped to itself,
$$
J_g = \begin{bmatrix}
J_{f,x} &amp;amp;amp; J_{f,y} \\
0 &amp;amp;amp; I
\end{bmatrix}
$$
has a block structure, where
$$
J_{f,x} = \frac{\partial f(x,y)}{\partial x}
$$
and similarly for $J_{f,y}$. For the calculation of the determinant, you can safely ignore the latter, and $\log \det I = 0$, so
$$
\log\det J_g = \log\det J_{f,x}
$$&amp;lt;/p&amp;gt;
</content>
  </entry>
  
</feed>
